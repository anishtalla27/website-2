---
title: "Billboard Graphic"
execute:
  echo: false
---

```{r}
suppressPackageStartupMessages(library(tidyverse))
```

```{r}
#| label: billboard-plot
#| fig-cap: "Top 5 Billboard Songs of 2000 - Weekly Performance"
#| fig-alt: "Line chart showing the weekly chart positions of 5 hit songs from 2000"

suppressPackageStartupMessages({
  library(tidyverse)
  library(glue)
})

# Prepare the data
top_songs <- billboard |> 
  pivot_longer(
    cols = starts_with("wk"),
    names_to = "week",
    values_to = "rank",
    values_drop_na = TRUE
  ) |> 
  mutate(
    week_num = parse_number(week),
    date = as.Date(date.entered) + 7*(week_num - 1)
  ) |> 
  # Filter to top-performing songs
  group_by(track) |> 
  filter(min(rank, na.rm = TRUE) <= 10) |> 
  ungroup() |> 
  # Create nice labels
  mutate(
    song_label = glue("{artist}\n{track}"),
    song_label = fct_reorder(song_label, rank, .fun = min)
  )

# Create the visualization
ggplot(top_songs, aes(x = date, y = rank, color = song_label)) +
  geom_line(linewidth = 1, alpha = 0.8) +
  geom_point(size = 1.5) +
  scale_y_reverse(
    limits = c(100, 1),
    breaks = c(1, 10, 20, 40, 60, 80, 100)
  ) +
  scale_x_date(
    date_breaks = "1 month",
    date_labels = "%b"
  ) +
  scale_color_brewer(palette = "Set1") +
  labs(
    title = "Billboard Top 100 Trajectories (2000)",
    subtitle = "Weekly chart positions for hit songs",
    x = "Month",
    y = "Chart Position (Lower = Better)",
    color = "Song",
    caption = "Source: tidyr::billboard dataset"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    legend.position = "bottom",
    plot.title = element_text(face = "bold", size = 16),
    panel.grid.minor = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  ) +
  guides(color = guide_legend(nrow = 2))
```
